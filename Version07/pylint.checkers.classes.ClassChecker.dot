digraph "pylint.checkers.classes.ClassChecker" {
charset="utf-8"
rankdir=BT
"0" [label="{collections.defaultdict|default_factory : NoneType\l|}", shape="record"];
"1" [label="{optparse.Values|jobs : int\lpersistent : int\lspelling_private_dict_file\l|ensure_value(attr, value)\lread_file(filename, mode)\lread_module(modname, mode)\l}", shape="record"];
"2" [label="{pylint.checkers.base_checker.BaseChecker|enabled : bool\llevel : int\llinter : NoneType\lmessages\lmsgs : Any\lname\lname : str\loptions : Any\lreports : Any\l|add_message(msgid, line, node, args, confidence, col_offset)\lcheck_consistency()\lclose()\lcreate_message_definition_from_tuple(msgid, msg_tuple)\lget_full_documentation(msgs, options, reports, doc, module)\lget_message_definition(msgid)\lopen()\l}", shape="record"];
"3" [label="{pylint.checkers.classes.ClassChecker|msgs : dict\lname : str\loptions : tuple\lpriority : int\lvisit_asyncfunctiondef\l|leave_classdef(node): \lleave_functiondef(node)\lvisit_assign(assign_node)\lvisit_assignattr(node): \lvisit_attribute(node)\lvisit_classdef(node)\lvisit_functiondef(node)\lvisit_name(node)\l}", shape="record"];
"4" [label="{pylint.checkers.classes.ScopeAccessMap|\l|accessed(scope)\lset_accessed(node)\l}", shape="record"];
"5" [label="{pylint.config.options_provider_mixin.OptionsProviderMixIn|config\llevel : int\lname : str\loptions : Tuple[Tuple[str, Dict[str, Any]], ...]\lpriority : int\l|get_option_def(opt)\lload_defaults()\loption_attrname(opt, optdict)\loption_value(opt)\loptions_and_values(options)\loptions_by_section()\lset_option(optname, value, action, optdict)\l}", shape="record"];
"2" -> "5" [arrowhead="empty", arrowtail="none"];
"3" -> "2" [arrowhead="empty", arrowtail="none"];
"0" -> "4" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_scopes", style="solid"];
"1" -> "5" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="config", style="solid"];
"4" -> "3" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_accessed", style="solid"];
}
